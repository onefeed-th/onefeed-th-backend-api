// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: sources.sql

package onefeed_th_sqlc

import (
	"context"
)

const getAllSources = `-- name: GetAllSources :many
SELECT id, name, tags, rss_url, created_at
FROM sources
`

func (q *Queries) GetAllSources(ctx context.Context) ([]Source, error) {
	rows, err := q.db.Query(ctx, getAllSources)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Source
	for rows.Next() {
		var i Source
		if err := rows.Scan(
			&i.ID,
			&i.Name,
			&i.Tags,
			&i.RssUrl,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
